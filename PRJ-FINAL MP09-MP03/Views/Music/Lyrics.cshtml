@model PRJ_FINAL_MP09_MP03.Models.MusicViewModel
@{
    Layout = null;
}

@{
    ViewData["Title"] = "Buscar Lyrics";
    
}
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Dashboard Musical</title>

    <!-- Bootstrap -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" />

        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" />

    <!-- Estilo personalizado -->
    <link href="~/css/dashboard.css" rel="stylesheet" />

    <style>

    body{
      color: #f4f4f4;
    }
    .glass-searchbar {
      background: rgba(255,255,255,0.13);
      backdrop-filter: blur(16px) saturate(1.2);
      -webkit-backdrop-filter: blur(16px) saturate(1.2);
      border-radius: 22px;
      box-shadow: 0 8px 32px 0 rgba(31,38,135,0.10);
      padding: 0.35em 1.2em 0.35em 0.8em;
      gap: 0.7em;
      width: 100%;
      max-width: 480px;
      margin: 0 auto;
      border: 1.5px solid rgba(255,255,255,0.13);
    }
    .glass-searchbar input::placeholder { color: #999; }

    .glass-search-icon {
      color: #8a2be2;
      font-size: 1.25em;
      margin-right: 0.3em;
      filter: drop-shadow(0 2px 8px rgba(138,43,226,0.10));
    }

    .glass-search-input {
      background: transparent;
      border: none;
      outline: none;
      color: #222;
      font-size: 1.08rem;
      font-weight: 500;
      flex: 1;
      padding: 0.5em 0.7em;
      border-radius: 12px;
      transition: background 0.18s;
    }

    .glass-search-input::placeholder {
      color: #8a2be2;
      opacity: 0.7;
      font-weight: 400;
      letter-spacing: 0.5px;
    }

    .btn-apple-search {
      display: inline-flex;
      align-items: center;
      gap: 0.6em;
      background: linear-gradient(90deg, #532ab9, #8a2be2);
      color: #fff;
      box-shadow: 0 0 12px #8a2be2;
      transition: all 0.2s;
      border: none;
      border-radius: 18px;
      padding: 0.55em 1.5em;
      font-size: 1.08rem;
      font-weight: 600;
      outline: none;
      cursor: pointer;
      position: relative;
      overflow: hidden;
    }
    .btn-apple-search:hover, .btn-apple-search:focus {
      background:#8a2be2;
      color: #fff;
      box-shadow: 0 0 18px #532ab9;
      transform: translateY(-2px) scale(1.04);
    }
    
    .sidebar-logout {
      margin-top: 2.5rem;
      padding-top: 1.5rem;
      border-top: 1px solid rgba(255,255,255,0.08);
      display: flex;
      justify-content: flex-start;
    }
    .logout-link {
      color: #ff4d4f;
      font-weight: 700;
      font-size: 1.08rem;
      border-radius: 12px;
      padding: 0.5rem 1.2rem;
      background: rgba(255,77,79,0.08);
      transition: background 0.18s, color 0.18s;
      text-decoration: none;
      display: flex;
      align-items: center;
      gap: 0.7em;
    }
    .logout-link i {
      font-size: 1.2em;
    }
    .logout-link:hover {
      background: rgba(255,77,79,0.18);
      color: #fff;
    }

    
    </style>
</head>
<body>
    <!-- Fondo y gradientes -->
    <div class="gradient-bg">
      <svg xmlns="http://www.w3.org/2000/svg">
        <defs>
          <filter id="goo">
            <feGaussianBlur in="SourceGraphic" stdDeviation="10" result="blur" />
            <feColorMatrix in="blur" mode="matrix" values="1 0 0 0 0  0 1 0 0 0  0 0 1 0 0  0 0 0 18 -8" result="goo" />
            <feBlend in="SourceGraphic" in2="goo" />
          </filter>
        </defs>
      </svg>
      <div class="gradients-container">
        <div class="g1"></div>
        <div class="g2"></div>
        <div class="g3"></div>
        <div class="g4"></div>
        <div class="g5"></div>
        <div class="interactive"></div>
      </div>
    </div>

    <div class="app-window">
      <aside>
        <nav class="nav nav--main">
          <ul>
            <li>
              <a asp-controller="Music" asp-action="Dashboard">
                <i class="fas fa-headphones"></i> Dashboard
              </a>
            </li>
            <li>
              <a asp-controller="Music" asp-action="Trending">
                <i class="fas fa-fire"></i> Trending
              </a>
            </li>
            <li>
              <a asp-controller="Music" asp-action="TopTracksArtista">
                <i class="fas fa-star"></i> Top Tracks Artistas
              </a>
            </li>
          </ul>
        </nav>
        <nav class="nav nav--has-icons">
          <h3>Library</h3>
          <ul>
            <li>
              <a asp-controller="Music" asp-action="Playlist">
                <i class="fas fa-list"></i> Playlists
              </a>
            </li>
            <li class="nav-item--selected">
              <a asp-controller="Music" asp-action="Lyrics">
                <i class="fas fa-music"></i> Lyrics
              </a>
            </li>
          </ul>
        </nav>
        <div class="sidebar-logout mt-auto">
          <a href="#" id="logout-link" class="logout-link">
            <i class="fas fa-sign-out-alt"></i> Sign Out
          </a>
        </div>
      </aside>
      <main>
        <form method="get" asp-controller="Music" asp-action="BuscarTrackIdLyrics" class="container mt-4 d-flex justify-content-center">
          <div class="glass-searchbar d-flex align-items-center">
            <i class="fas fa-search glass-search-icon"></i>
            <input type="text" name="nombreCancion" class="glass-search-input" placeholder="Buscar canción por nombre..." required />
            <button type="submit" class="btn-apple-search" id="searchBtn">
              Search
            </button>
          </div>
        </form>
        <div id="resultadoLyrics" class="text-center mt-4"></div>
        @if (TempData["TrackId"] != null)
        {
          <div class="alert alert-success text-center mt-4 d-none"></div>
        }
        else if (TempData["Error"] != null)
        {
          <div class="alert alert-danger text-center mt-4 d-none">
            @TempData["Error"]
          </div>
        }
      </main>
    </div>
    <script>
      // Animación del botón de búsqueda (tipo buton)
      const searchBtn = document.getElementById('searchBtn');
      if (searchBtn) {
        searchBtn.addEventListener('click', function (e) {
          setTimeout(() => {
            searchBtn.classList.add('loading');
            setTimeout(() => {
              searchBtn.classList.add('complete');
              setTimeout(() => {
                searchBtn.classList.remove('loading', 'complete');
              }, 1200);
            }, 1800);
          }, 100);
        });
      }
    </script>
    <script>
      document.addEventListener("DOMContentLoaded", async () => {
        const trackId = @Html.Raw(Json.Serialize(TempData["TrackId"]));
        const nombreCancion = document.querySelector('input[name="nombreCancion"]')?.value || '';
        if (!trackId) return;

        const resultado = document.getElementById("resultadoLyrics");
        resultado.innerHTML = "<p>Buscando letras...</p>";

        try {
          const response = await fetch(`https://spotify81.p.rapidapi.com/track_lyrics?id=${trackId}`, {
            method: "GET",
            headers: {
              "x-rapidapi-key": "03bcc8278amshf34089036b951c4p1bcc4cjsn111aaee3674d",
              "x-rapidapi-host": "spotify81.p.rapidapi.com"
            }
          });

          if (!response.ok) throw new Error("No se pudo obtener la letra de la canción.");

          const data = await response.json();
          const lines = data.lyrics?.lines;
          // Obtener el nombre de la canción si está disponible
          const songTitle = data.name || nombreCancion || 'Letra';

          if (!lines || lines.length === 0) {
            resultado.innerHTML = "<p>No se encontraron letras para esta canción.</p>";
            return;
          }

          const lyricsHtml = lines.map(line => line.words).join('<br>');
          resultado.innerHTML = `<h4>${songTitle}</h4><p>${lyricsHtml}</p>`;

        } catch (error) {
          resultado.innerHTML = `<p class="text-danger">Error al obtener letras: ${error.message}</p>`;
          console.error(error);
        }
      });
    </script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
      document.addEventListener('DOMContentLoaded', () => {
        const logoutLink = document.getElementById('logout-link');
        if (logoutLink) {
          logoutLink.addEventListener('click', function (e) {
            e.preventDefault();
            Swal.fire({
              title: '¿Seguro que quieres salir?',
              text: "Se cerrará tu sesión.",
              icon: 'warning',
              showCancelButton: true,
              confirmButtonColor: '#d33',
              cancelButtonColor: '#3085d6',
              confirmButtonText: 'Sí, salir',
              background: '#1a1a1a',
              color: '#f1f1f1',
              customClass: {
                popup: 'rounded-4 shadow-lg',
                confirmButton: 'btn btn-danger',
                cancelButton: 'btn btn-secondary me-3'
              }
            }).then((result) => {
              if (result.isConfirmed) {
                window.location.href = '/Account/Logout';
              }
            });
          });
        }
      });
    </script>
</body>
</html>