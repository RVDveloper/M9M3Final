@model List<PRJ_FINAL_MP09_MP03.Models.Playlist>
@{
    Layout = null;
    // Filtra para que solo haya un elemento por idTrack
    var uniqueModel = Model
        .GroupBy(x => x.IdTrack)
        .Select(g => g.First())
        .ToList();
}
<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Playlist de Usuario</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link href="~/css/Playlist.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@9/swiper-bundle.min.css" />
</head>
<body>
  <div class="app-window">
    <aside>
      <nav class="nav nav--main">
        <ul>
          <li>
            <a asp-controller="Music" asp-action="Dashboard">
              <i class="fas fa-headphones"></i> Dashboard
            </a>
          </li>
          <li>
            <a asp-controller="Music" asp-action="Trending">
              <i class="fas fa-fire"></i> Trending
            </a>
          </li>
          <li>
            <a asp-controller="Music" asp-action="TopTracksArtista">
              <i class="fas fa-star"></i> Top Tracks Artistas
            </a>
          </li>
        </ul>
      </nav>
      <nav class="nav nav--has-icons">
        <h3>Library</h3>
        <ul>
          <li class="nav-item--selected">
            <a asp-controller="Music" asp-action="Playlist">
              <i class="fas fa-list"></i> Playlists
            </a>
          </li>
          <li>
            <a asp-controller="Music" asp-action="Lyrics">
              <i class="fas fa-music"></i> Lyrics
            </a>
          </li>
        </ul>
      </nav>
    </aside>
    <main>
      <div class="content">
        <div class="slider-playlist">
          <!-- Swiper Carrusel -->
          <div class="swiper">
            <div class="swiper-wrapper">
              @for (int i = 0; i < uniqueModel.Count; i++)
              {
                  <div class="swiper-slide">
                    <img src="@uniqueModel[i].UrlImg" alt="@uniqueModel[i].NombreCancion" />
                    <h1>@uniqueModel[i].Artista</h1>
                  </div>
              }
            </div>
          </div>
          <!-- Lista Playlist -->
          <div class="playlist">
            @for (int i = 0; i < uniqueModel.Count; i++)
            {
                <div class="playlist-item" data-index="@i">
                  <img src="@uniqueModel[i].UrlImg" alt="@uniqueModel[i].NombreCancion" />
                  <div class="song">
                    <p>@uniqueModel[i].Artista</p>
                    <p>@uniqueModel[i].NombreCancion</p>
                  </div>
                  <span class="duration">--:--</span>
                  <i class="fa-regular fa-heart like-btn"></i>
                </div>
            }
          </div>
        </div>
        <!-- Player -->
        <div class="player">
          <audio id="audioPlayer" src="" type="audio/mpeg"></audio>
          <div class="controls">
            <i class="fa-solid fa-shuffle" id="shuffleBtn"></i>
            <i class="fa-solid fa-backward" id="prevBtn"></i>
            <button id="playPauseBtn">
              <i class="fa-solid fa-play" id="playPauseIcon"></i>
            </button>
            <i class="fa-solid fa-forward" id="nextBtn"></i>
            <div class="volume">
              <i class="fa-solid fa-volume-high"></i>
              <input type="range" id="volume-range" min="0" max="100" value="100" />
            </div>
          </div>
          <input type="range" value="0" id="progress-bar" />
        </div>
      </div>
    </main>
  </div>
  <script src="https://cdn.jsdelivr.net/npm/swiper@9/swiper-bundle.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/js/all.min.js"></script>
  <script>
    // Array de URLs de canciones (solo para cargar duraci√≥n)
    const songs = [
      @for (int i = 0; i < uniqueModel.Count; i++)
      {
        <text>"@uniqueModel[i].UrlMusica"@(i < uniqueModel.Count - 1 ? "," : "")</text>
      }
    ];
    // Datos de playlist
    const playlistData = [
      @for (int i = 0; i < uniqueModel.Count; i++) {
        <text>{
          id: '@uniqueModel[i].IdTrack',
          urlImg: '@uniqueModel[i].UrlImg',
          nombreCancion: '@uniqueModel[i].NombreCancion',
          artista: '@uniqueModel[i].Artista',
          urlMusica: '@uniqueModel[i].UrlMusica'
        }@(i < uniqueModel.Count - 1 ? "," : "")</text>
      }
    ];
  </script>
  <script src="~/js/Playlist.js"></script>
</body>
</html>
